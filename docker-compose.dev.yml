version: '3.8'

services:
  app:
    build: .
    container_name: node-app
    command: ["npx", "nodemon", "--inspect=0.0.0.0:9229", "index.js"]
    ports:
      - "8080:8080"   # Web-Interface (AdminJS etc.)
      - "9229:9229"   # Debug-Port für App
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      PG_HOST: ${PG_HOST}
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_DB: ${PG_DB}
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped

  worker:
    build: .
    container_name: node-worker
    command: ["npx", "nodemon", "--inspect=0.0.0.0:9229", "worker.mjs"]
    ports:
      - "9230:9229"  # Debug-Port für Worker (gemappt auf anderen Host-Port)
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      PG_HOST: ${PG_HOST}
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_DB: ${PG_DB}
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: local-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  postgres:
    image: postgres:17
    container_name: local-postgres
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data

volumes:
  redis-data:
  pg-data: